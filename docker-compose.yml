version: "3.8"

services:
  # ======================
  # VAULTNOTARY BACKEND API
  # ======================
  vaultnotary-api:
    build:
      context: ./backend/src
      dockerfile: VaultNotary.Web/Dockerfile
    container_name: vaultnotary-api
    ports:
      - "5000:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=${ASPNETCORE_ENVIRONMENT}
      - ASPNETCORE_URLS=http://+:80
      - ConnectionStrings__DefaultConnection=${DATABASE_CONNECTION_STRING}
      - Aws__Region=${AWS_REGION}
      - Aws__AccessKey=${AWS_ACCESS_KEY}
      - Aws__SecretKey=${AWS_SECRET_KEY}
      - Aws__S3__BucketName=${AWS_S3_BUCKET_NAME}
      - Aws__S3__FileKeyPrefix=${AWS_S3_FILE_PREFIX}
      - Aws__S3__PresignedUrlExpirationHours=${AWS_S3_PRESIGNED_URL_HOURS}
      - Aws__Kms__SymmetricKeyId=${AWS_KMS_SYMMETRIC_KEY_ID}
      - ConnectionStrings__RabbitMQ=${RABBITMQ_CONNECTION_STRING}
      - Auth0__Domain=auth.nharong.vn
      - Auth0__Audience=https://vaultnotary-api
    # depends_on:
    #   - rabbitmq
    networks:
      - backend-network
    restart: unless-stopped

  # ======================
  # BACKGROUND JOBS
  # ======================
  # vaultnotary-jobs:
  #   build:
  #     context: ./backend/src
  #     dockerfile: VaultNotary.BackgroundJobs/Dockerfile
  #   container_name: vaultnotary-jobs
  #   environment:
  #     - DOTNET_ENVIRONMENT=Test
  #     - ConnectionStrings__RabbitMQ=amqp://admin:password@rabbitmq:5672
  #     - Aws__Region=us-east-1
  #     - Aws__AccessKey=AKIARXO2YC5AF6QISK4Z
  #     - Aws__SecretKey=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
  #     - Aws__S3__BucketName=vaultnotary-files-dev-119107229504
  #     - Aws__S3__FileKeyPrefix=files/
  #     - Aws__Kms__SymmetricKeyId=f9998863-7bd3-4682-98cc-cdecc2df87b2
  #   depends_on:
  #     - rabbitmq
  #   networks:
  #     - backend-network
  #   restart: unless-stopped

  # ======================
  # FRONTEND
  # ======================
  vaultnotary-frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: vaultnotary-frontend
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=https://api.nharong.vn/api
      - AUTH0_SECRET=${AUTH0_SECRET}
      - AUTH0_BASE_URL=${AUTH0_BASE_URL}
      - AUTH0_DOMAIN=${AUTH0_DOMAIN}
      - AUTH0_CLIENT_ID=${AUTH0_CLIENT_ID}
      - AUTH0_CLIENT_SECRET=${AUTH0_CLIENT_SECRET}
      - AUTH0_AUDIENCE=${AUTH0_AUDIENCE}
      - AUTH0_SCOPE=${AUTH0_SCOPE}
      - AUTH0_SESSION_ROLLING_DURATION=${AUTH0_SESSION_ROLLING_DURATION}
      - AUTH0_SESSION_ABSOLUTE_DURATION=${AUTH0_SESSION_ABSOLUTE_DURATION}
    depends_on:
      - vaultnotary-api
    networks:
      - frontend-network
      - backend-network
    restart: unless-stopped

  # ======================
  # DATABASE (Disabled for AWS testing)
  # ======================
  # postgres:
  #   image: postgres:15-alpine
  #   container_name: vaultnotary-postgres
  #   ports:
  #     - "5432:5432"
  #   environment:
  #     - POSTGRES_DB=vaultnotary
  #     - POSTGRES_USER=postgres
  #     - POSTGRES_PASSWORD=password
  #   volumes:
  #     - postgres-data:/var/lib/postgresql/data
  #     - ./backend/migrations:/docker-entrypoint-initdb.d
  #   networks:
  #     - backend-network
  #   restart: unless-stopped
  #   healthcheck:
  #     test: ["CMD-SHELL", "pg_isready -U postgres"]
  #     interval: 30s
  #     timeout: 10s
  #     retries: 3

  # ======================
  # MESSAGE QUEUE
  # ======================
  # rabbitmq:
  #   image: rabbitmq:3-management-alpine
  #   container_name: vaultnotary-rabbitmq
  #   ports:
  #     - "5672:5672"
  #     - "15672:15672"
  #   environment:
  #     - RABBITMQ_DEFAULT_USER=admin
  #     - RABBITMQ_DEFAULT_PASS=password
  #   volumes:
  #     - rabbitmq-data:/var/lib/rabbitmq
  #   networks:
  #     - backend-network
  #   restart: unless-stopped

# ======================
# NETWORKS
# ======================
networks:
  frontend-network:
    driver: bridge
  backend-network:
    driver: bridge

# ======================
# VOLUMES
# ======================
volumes:
  postgres-data:
  rabbitmq-data:
